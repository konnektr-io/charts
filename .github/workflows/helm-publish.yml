name: Publish Helm Charts

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  test-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Update Helm dependencies
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Updating dependencies for $chart"
            helm dependency update "$chart"
          done

      - name: Lint all Helm charts
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Linting $chart"
            helm lint "$chart"
          done

      - name: Render templates for all charts
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Rendering templates for $chart"
            helm template test "$chart"
          done

    # This job should run before packaging and publishing
    # If it fails, the workflow will not continue

  package-charts:
    runs-on: ubuntu-latest
    needs: test-charts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Update Helm dependencies
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Updating dependencies for $chart"
            helm dependency update "$chart"
          done

      - name: Download CRDs if chart requires them
        id: download-crds
        run: |
          set -e
          for chart_yaml in $(find . -name Chart.yaml); do
            chart_dir=$(dirname "$chart_yaml")
            crds_dir="$chart_dir/templates/crds"
            # Check for 'CRD' keyword in Chart.yaml
            if grep -q 'CRD' "$chart_yaml"; then
              # Extract appVersion
              app_version=$(yq e '.appVersion' "$chart_yaml")
              # Extract crd-repo-url annotation and replace placeholder
              crd_url=$(yq e '.annotations["crd-repo-url"]' "$chart_yaml" | sed "s/{{ .appVersion }}/$app_version/")
              if [ "$crd_url" != "null" ] && [ -n "$crd_url" ]; then
                # Make sure crds directory exists
                mkdir -p "$crds_dir"
                # Download all CRDs in the folder (assume GitHub API for konnektr-io charts)
                crd_list_url="$crd_url"
                for crd_file in $(curl -s "$crd_list_url" | jq -r '.[] | select(.name | endswith(".yaml")) | .download_url'); do
                  curl -sSL "$crd_file" -o "$crds_dir/_$(basename $crd_file)"
                done
              fi
            fi
          done
        shell: bash

      - name: Package Helm charts
        run: |
          mkdir -p packaged
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            helm package $chart --destination packaged
          done

      - name: Upload chart packages as artifact
        uses: actions/upload-artifact@v4
        with:
          name: chart-packages
          path: packaged/

  update-gh-pages:
    runs-on: ubuntu-latest
    needs: package-charts

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Download chart packages artifact
        uses: actions/download-artifact@v4
        with:
          name: chart-packages

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Update Helm repo index
        run: |
          helm repo index . --url https://charts.konnektr.io

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update Helm chart repository" || echo "No changes to commit"
          git push origin gh-pages

  publish-oci-charts:
    runs-on: ubuntu-latest
    needs: package-charts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download chart packages artifact
        uses: actions/download-artifact@v4
        with:
          name: chart-packages
          path: ./packaged

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push charts to OCI registry
        run: |
          for chart_package in ./packaged/*.tgz; do
            if [ -f "$chart_package" ]; then
              package_name=$(basename "$chart_package" .tgz)
              echo "Pushing $chart_package to OCI registry at charts/$package_name..."
              helm push "$chart_package" oci://ghcr.io/${{ github.repository_owner }}/charts/$package_name
            fi
          done

      - name: Log out from registry
        run: |
          helm registry logout ghcr.io
